{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Board","props","squareStyleBlack","display","justifyContent","alignItems","width","height","borderWidth","borderColor","borderStyle","alignSelf","justifySelf","color","backgroundColor","squareStyleWhite","boardDisplayRows","gap","gridTemplateRows","gridTemplateColumns","boardDisplayColumns","state","rows","columns","board","i","this","row","j","console","log","String","fromCharCode","squareClassName","currStyle","push","className","style","id","unshift","map","elem","index","square","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAAe,I,oBCiFAA,E,kDA3ET,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMZC,iBAAmB,CACjBC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,MAAO,OACPC,OAAQ,OACRC,YAAa,MACbC,YAAa,QACbC,YAAa,QACbC,UAAW,SACXC,YAAa,SACbC,MAAO,QACPC,gBAAiB,SAnBI,EAqBvBC,iBAAmB,CACjBZ,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,MAAO,OACPC,OAAQ,OACRC,YAAa,MACbC,YAAa,QACbC,YAAa,QACbC,UAAW,SACXC,YAAa,UA/BQ,EAiCvBI,iBAAmB,CACjBb,QAAS,OACTc,IAAK,IACLC,iBAAkB,OAClBC,oBAAqB,iBACrBR,UAAW,SACXC,YAAa,UAvCQ,EAyCvBQ,oBAAsB,CACpBjB,QAAS,OACTc,IAAK,IACLE,oBAAqB,OACrBD,iBAAkB,kBA3Cd,EAAKG,MAAQ,CACTC,KAAM,EACNC,QAAS,GAJI,E,0CA+CvB,WAGE,IAHQ,IAAD,OACHC,EAAQ,GACRX,EAAQ,EACHY,EAAIC,KAAKL,MAAMC,KAAMG,EAAI,EAAKA,IAAK,CAGxC,IAFA,IACIE,EAAM,GACDC,EAAIF,KAAKL,MAAME,QAASK,EAAI,EAAGA,IAAK,CACzCC,QAAQC,IAAIC,OAAOC,aAHJ,GAGgCP,GAAKG,GAEpD,IAAIK,EAA4B,KADhCpB,EAAmB,IAAVA,EAAe,EAAI,GACQ,QAAU,QAC1CqB,EAAsB,IAAVrB,EAAca,KAAKxB,iBAAmBwB,KAAKX,iBAC3DY,EAAIQ,KAAK,qBAAKC,UAAWH,EAAiBI,MAAOH,EAAWI,GAAIP,OAAOC,aAPxD,GAOoFP,GAAKG,EAA/F,SAAmGG,OAAOC,aAPpG,GAOgIP,GAAKG,KAExJf,EAAkB,IAAVA,EAAc,EAAI,EAC1BW,EAAMe,QAAQZ,GAEhB,OACI,qBAAKS,UAAU,QAAQC,MAAOX,KAAKV,iBAAnC,SACGQ,EAAMgB,KAAI,SAACC,EAAMC,GAChB,OAAO,qBAAKN,UAAW,QAAUM,EAAQ,GAAIL,MAAO,EAAKjB,oBAAlD,SAAwEqB,EAAKD,KAAI,SAAAG,GAAM,OAAIA,gB,GAnE5FC,aCOLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a1b792f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport { Component, React } from \"react\";\n\nclass Board extends Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n            rows: 8,\n            columns: 8\n         }\n      }\n  squareStyleBlack = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    borderWidth: '1px',\n    borderColor: 'black',\n    borderStyle: 'solid',\n    alignSelf: 'center',\n    justifySelf: 'center',\n    color: 'white',\n    backgroundColor: 'black'\n  }\n  squareStyleWhite = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    borderWidth: '1px',\n    borderColor: 'black',\n    borderStyle: 'solid',\n    alignSelf: 'center',\n    justifySelf: 'center'\n  }\n  boardDisplayRows = {\n    display: 'grid',\n    gap: '0',\n    gridTemplateRows: '100%',\n    gridTemplateColumns: 'repeat(8, 1fr)',\n    alignSelf: 'center',\n    justifySelf: 'center'\n  }\n  boardDisplayColumns = {\n    display: 'grid',\n    gap: '0',\n    gridTemplateColumns: '100%',\n    gridTemplateRows: 'repeat(8, 1fr)'\n  }\n  render() {\n    let board = [];\n    let color = 0;\n    for (let i = this.state.rows; i > 0  ; i--) {\n        let baseCharCode = 96;\n        let row = [];\n        for (let j = this.state.columns; j > 0; j--) {\n            console.log(String.fromCharCode(baseCharCode + i) + j);\n            color = (color === 1) ? 0 : 1\n            let squareClassName = color === 1 ? 'black' : 'white'\n            let currStyle = color === 1 ? this.squareStyleBlack : this.squareStyleWhite\n            row.push(<div className={squareClassName} style={currStyle} id={String.fromCharCode(baseCharCode + i) + j}>{String.fromCharCode(baseCharCode + i) + j}</div>)\n        }\n        color = color === 1 ? 0 : 1\n        board.unshift(row)\n    }\n      return (\n          <div className=\"Board\" style={this.boardDisplayRows}>\n            {board.map((elem, index) => {\n              return <div className={'row ' + (index + 1)} style={this.boardDisplayColumns}>{elem.map(square => square)}</div>\n              }\n            )\n            }\n          </div>\n        )\n    }\n  }\n\nexport default Board;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Board from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { render } from '@testing-library/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Board />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}